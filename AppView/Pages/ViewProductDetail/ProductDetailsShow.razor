@page "/products/detailshow/{id}"
@inject IProductDetailService _productService
@inject NavigationManager navigationManager
@inject ICartDetailService cartDetailService
@using AppView.IServices;

@code {
    Random random;
    int percentage;

    protected override void OnInitialized()
    {
        random = new Random();
        percentage = random.Next(70, 100);
    }
}



@if (product != null)
{
    <head>

        <meta name="viewport" content="width=device-width, initial-scale=1">

        <title>eCommerce Product Detail</title>
        <link href="~/css/bootstrap/cssProductDetails.css" />
        <link href="https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css" rel="stylesheet">
        <link href="https://fonts.googleapis.com/css?family=Open+Sans:400,700" rel="stylesheet">

    </head>
    <body>
        <div class="container">
            <h3 @onclick="(() => index())">@(isEditing ? "Cập nhật thông tin sản phẩm" : "Trang chủ")</h3>
            <div class="card">
                <div class="container-fliud">
                    <div class="wrapper row">
                        <div class="preview col-md-6">

                            <div class="preview-pic tab-content">
                                <div class="tab-pane active" id="pic-1"><img src="@product.Anh" / width="500px" height="400"></div>
                            </div>
                        </div>
                        <div class="details col-md-6">
                            <h3 class="product-title">@product.Ten</h3>
                            <div class="rating">
                                <div class="stars">
                                    <span class="fa fa-star checked"></span>
                                    <span class="fa fa-star checked"></span>
                                    <span class="fa fa-star checked"></span>
                                    <span class="fa fa-star"></span>
                                    <span class="fa fa-star"></span>
                                </div>
                                <span class="review-no">41 reviews</span>
                            </div>
                            <p class="product-description">Món ăn siêu ngon ăn là nhớ hehe 🐸🐸🐸🐸🐸🐸.</p>
                            <h4 class="price">Giá bán: <span>@product.GiaBan VNĐ</span></h4>
                            <p class="vote"><strong style="color:red">@percentage%</strong> đánh giá ngon khó cưỡng! <strong>(87 votes)</strong></p>
                            <h5 class="colors">
                                Loại: @product.Loai
                            </h5>
                            <div class="action">
                                <button class="add-to-cart btn btn-default" type="button" @onclick="()=>AddToCart(product)">add to cart</button>
                                <button class="like btn btn-default" type="button"><span class="fa fa-heart"></span></button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </body>

}
@code {
    [Parameter]
    public string Id { get; set; }

    private ProductDetail product = new ProductDetail();
    private bool isEditing = false;
    protected override async Task OnInitializedAsync()
    {
        product = await _productService.GetById(Guid.Parse(Id));
    }


    void index()
    {
        navigationManager.NavigateTo($"/index");
    }

    private void SaveProduct()
    {
        _productService.Update(product);
        isEditing = false;

    }

    private async void AddToCart(ProductDetail pro)
    {
        var listCartDetail = (await cartDetailService.GetListEntity(Extension.idUser));
        if (listCartDetail.Any(x => x.Name == pro.Ten))
        {
            var cartDetailViewModel = listCartDetail.FirstOrDefault(x => x.Name == pro.Ten);
            var cartDetail = await cartDetailService.GetEntityByKey(cartDetailViewModel.Id);
            cartDetail.Soluong += 1;
            await cartDetailService.UpdateEntity(cartDetail);
            navigationManager.NavigateTo($"/CartDetails/{Extension.idUser}");

            return;
        }
        await cartDetailService.AddEntity(new CartDetail
        {
            DetailProductID = pro.Id,
            Soluong = 1,
            UserID = Extension.idUser,
            Dongia = Convert.ToDecimal(pro.GiaBan),
        });


        navigationManager.NavigateTo($"/CartDetails/{Extension.idUser}");
    }
}


