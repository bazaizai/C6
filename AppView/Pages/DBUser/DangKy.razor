@page "/register"
@inject IUserServices userServices
@inject NavigationManager NavigationManager

<div class="card">
    <h4 class="card-header">Register</h4>
    <div class="card-body">
        <EditForm Model="@users" OnValidSubmit="OnValidSubmit">
            <DataAnnotationsValidator />
            <div class="form-group">
                <label>Ten</label>
                <InputText @bind-Value="users.Ten" class="form-control" />
                <ValidationMessage For="@(() => users.Ten)" />
            </div>
            <div class="form-group">
                <label>Ma</label>
                <InputText @bind-Value="users.Ma" class="form-control" />
                <ValidationMessage For="@(() => users.Ma)" />
            </div>
            <div class="form-group">
                <label>DiaChi</label>
                <InputText @bind-Value="users.DiaChi" class="form-control" />
                <ValidationMessage For="@(() => users.DiaChi)" />
            </div>
            <div class="form-group">
                <label>SDT</label>
                <InputText @bind-Value="users.Sdt" class="form-control" />
                <ValidationMessage For="@(() => users.Sdt)" />
            </div>
            <div class="form-group">
                <label>Email</label>
                <InputText @bind-Value="users.Email" class="form-control" />
                <ValidationMessage For="@(() => users.Email)" />
            </div>
            <div class="form-group">
                <label>MatKhau</label>
                <InputText @bind-Value="users.MatKhau" type="password" class="form-control" />
                <ValidationMessage For="@(() => users.MatKhau)" />
            </div>
            <button disabled="@loading" class="btn btn-primary">
                @if (loading)
                {
                    <span class="spinner-border spinner-border-sm mr-1"></span>
                }
                Register
            </button>
            <NavLink href="/login" class="btn btn-link">Cancel</NavLink>
        </EditForm>
    </div>
</div>

@code {
    private User users = new User();
    private bool loading;

    private async void OnValidSubmit()
    {
        // reset alerts on submit

        loading = true;
        await userServices.Add(users);
        NavigationManager.NavigateTo("/login");
        
    }
}
